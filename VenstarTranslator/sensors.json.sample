[
	{
		"Name": "Name of the sensor as you want it to appear in the thermostat UI, max 14 characters",
		"Enabled": true, // if you set this to false, it's defined but nothing will happen.
		"Purpose": "One of these four values *ONLY*, case sensitive: 'Outdoor', 'Return', 'Remote', or 'Supply'",
		"Scale": "F for Farenheit or C for Celsius, case sensitive",
		"URL": "HTTP or HTTPS URL to hit for temperature reading. Only HTTP GET is supported, and ideally the URL should return JSON but it's not required.",
		"IgnoreSSLErrors": true, // Only set this to true if this is a self-signed HTTPS URL.
		"JSONPath": "A JSONPath compliant query to run on the response from the URL to extract the actual temperature. A regex is run on the result to extract the first number from this field. If this is blank, the regex will be run on the whole HTTP response body instead.",
		"Headers": [
			{
				"Name": "Optional HTTP header required when sending the GET (e.g. 'Authorization' is required for Home Assistant's API)",
				"Value": "Value to send in the HTTP header"
			}
		]
	}
	{
		// This is an example of how to get a temperature reading from Home Assistant. 
		// An 'Authorization' header with a 'Bearer token' is required.
		// All Home Assistant installs seem to work with '$.state' for the JSON Path.
		// Don't forget to switch the scale to "C" if your Home Assistant instance is set to Celsius.
		"Name": "Entryway",
		"Enabled": true,
		"Purpose": "Remote",
		"Scale": "F",
		"URL": "http://homeassistant.example.org/api/states/sensor.temperature_1",
		"IgnoreSSLErrors": true,
		"JSONPath": "$.state",
		"Headers": [
			{
				"Name": "Authorization",
				"Value": "Bearer 12345"
			}
		]
	}
	{
		// This is an example of how to get outside temperature from an Ecowitt GW2000.
		// No authentication is needed.
		// Don't forget to switch the scale to "C" if your GW2000 is set to Celsius
		"Name": "Outside",
		"Enabled": true,
		"Purpose": "Outdoor",
		"Scale": "F",
		"URL": "http://ecowitt_gw2000.example.org/get_livedata_info",
		"JSONPath": "$.common_list[?(@.id==\"0x02\")].val"
	}
	{
		// This is an example of how to get readings from an Ecowitt temperature/humidity sensor linked to an Ecowitt GW2000. 
		// No authentication is needed.
		// Don't forget to switch the scale to "C" if your GW2000 is set to Celsius
		// You will need to change the "Sensor Name" in the JSONPath field to whatever your actual Ecowitt sensor is named.
		// That value can be different from the "Sensor Name" in the Name field.
		"Name": "Sensor Name",
		"Enabled": true,
		"Purpose": "Remote",
		"Scale": "F",
		"URL": "http://ecowitt_gw2000.example.org/get_livedata_info",
		"JSONPath": "$.ch_aisle[?(@.name==\"Sensor Name\")].temp"
	}
	{
		// This is an example of how to get readings from an Ecowitt temperature-only sensor linked to an Ecowitt GW2000. 
		// No authentication is needed.
		// Don't forget to switch the scale to "C" if your GW2000 is set to Celsius
		// You will need to change the "Sensor Name" in the JSONPath field to whatever your actual Ecowitt sensor is named.
		// That value can be different from the "Sensor Name" in the Name field.		
		"Name": "Sensor Name",
		"Enabled": true,
		"Purpose": "Remote",
		"Scale": "F",
		"URL": "http://ecowitt_gw2000.example.org/get_livedata_info",
		"JSONPath": "$.ch_temp[?(@.name==\"Sensor Name\")].temp"
	}
]